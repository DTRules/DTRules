/** 
 * Copyright 2004-2009 DTRules.com, Inc.
 *   
 * Licensed under the Apache License, Version 2.0 (the "License");  
 * you may not use this file except in compliance with the License.  
 * You may obtain a copy of the License at  
 *   
 *      http://www.apache.org/licenses/LICENSE-2.0  
 *   
 * Unless required by applicable law or agreed to in writing, software  
 * distributed under the License is distributed on an "AS IS" BASIS,  
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
 * See the License for the specific language governing permissions and  
 * limitations under the License.  
 **/
 Opening files...
Parsing specification from standard input...
Checking specification...
Building parse tables...
  Computing non-terminal nullability...
  Computing first sets...
  Building state machine...
  Filling in tables...
  Checking for non-reduced productions...
Writing parser...
===== Terminals =====
[0]EOF [1]error [2]ABSOLUTEVALUE [3]ACTION [4]ADD 
[5]AFTER [6]ALL [7]ALLOWING [8]AND [9]ARRAY 
[10]ARRAY_OF_VALUES [11]ASCENDINGORDER [12]ASSIGN [13]ATTRIBUTE [14]AT 
[15]BEFORE [16]BETWEEN [17]BOOL_FUNCTION [18]BOOLEAN [19]BY 
[20]CHANGE [21]CLEAR [22]CLONE [23]COLON [24]CONTEXT 
[25]COMMA [26]CONDITION [27]COPY [28]CURRENT_DATE [29]CURRENT_TIMESTAMP 
[30]CVS [31]DATE [32]DAYS [33]DEBUG [34]DECIMAL_PLACES 
[35]DECREMENT [36]DEEPCOPY [37]DESCENDINGORDER [38]DIVIDE [39]DOES 
[40]DOUBLE [41]EACH [42]EARLIEST [43]ELEMENT [44]ELSE 
[45]ELSEIF [46]ELSEIFNONEAREFOUND [47]END [48]ENDFF [49]ENDIF 
[50]ENTITY [51]EQ [52]EQ_IGNORE_CASE [53]FIRST [54]FLOAT 
[55]FOR [56]FORALL [57]FOREACH [58]FROM [59]GET 
[60]GT [61]GTE [62]HASA [63]HAVE [64]IF 
[65]IN [66]INCLUDE [67]INCLUDES [68]INCREMENT [69]INDEX_OF 
[70]INTEGER [71]IS [72]ISNOTNULL [73]ISNULL [74]ITS 
[75]LBRACE [76]LCURLY [77]LENGTH [78]LOCAL [79]LONG 
[80]LOWER_CASE [81]LPAREN [82]LT [83]LTE [84]MAP 
[85]MAPPINGKEY [86]MATCH [87]MATCHES [88]MEMBER [89]MINUS 
[90]MONTHS [91]MULTIPLY [92]NAME [93]NAMEOF [94]NEQ 
[95]NEQ_IGNORE_CASE [96]NEW [97]NO [98]NOT [99]NUMBEROF 
[100]OF [101]ON [102]ONE [103]ONERROR [104]OR 
[105]PERCENTOF [106]PERFORM [107]PLUS [108]PLUSORMINUS [109]POLICYSTATEMENT 
[110]POLICYSTATEMENTS [111]POSSESSIVE [112]PRINT [113]QUESTIONMARK [114]RANDOMIZE 
[115]RARRAY [116]RBOOLEAN [117]RBRACE [118]RCURLY [119]RDATE 
[120]RDECISIONTABLE [121]RDOUBLE [122]RELATIONSHIP_BETWEEN [123]REMOVE [124]RENTITY 
[125]RINVALID [126]RLONG [127]RNAME [128]RNULL [129]ROPERATOR 
[130]ROUNDED [131]RPAREN [132]RSTRING [133]RTABLE [134]RXMLVALUE 
[135]SEMI [136]SET [137]SORT [138]STARTS_WITH [139]STRING 
[140]SUBSTRING [141]SUBTRACT [142]SUM_OF [143]TABLE [144]TABLEINFORMATION 
[145]THEN [146]THENAME [147]THERE [148]THIS [149]TIMES 
[150]THROUGH [151]TO [152]TOBEREMOVED [153]TOKENIZE [154]TRIM 
[155]UMINUS [156]UNDEFINED [157]UPPER_CASE [158]USING [159]VALUE 
[160]WAS [161]WHERE [162]WITHIN [163]WITH_BOUNDRY [164]YEARS 
[165]YEAROF [166]IDENT 

===== Non terminals =====
[0]$START [1]done [2]statement_list [3]statement [4]number 
[5]inthe [6]iexpr [7]fexpr [8]bexpr [9]eexpr 
[10]nexpr [11]texpr [12]strexpr [13]indx_expr [14]dexpr 
[15]array_expr [16]array_expr2 [17]includeSearch [18]gforallblock [19]foreachblock 
[20]forallblock [21]forctl [22]forallctl [23]forfirstctl [24]ifblock 
[25]usingblock [26]firstblock [27]block [28]thereis [29]setstatement 
[30]usingstatement [31]performstatement [32]debugstatement [33]ifstatement [34]addtostatement 
[35]addtodest [36]addtodest2 [37]subtodest [38]clearstatement [39]randomstatements 
[40]commonerror [41]tablelist [42]operatorlist [43]operatorstatements [44]contextstatement 
[45]localvariables [46]context_for_table [47]datestatement [48]xmlvalues [49]xmlvaluestatements 
[50]separator [51]blist [52]blist_ic [53]ifcontinue [54]left_iexpr 
[55]left_fexpr [56]left_bexpr [57]left_eexpr [58]left_strexpr [59]left_dexpr 
[60]left_ArrayRef [61]left_texpr [62]colonRef [63]possessiveRef [64]array_lit 
[65]array_list 

===== Productions =====
[0] done ::= ACTION SEMI 
[1] $START ::= done EOF 
[2] done ::= CONDITION SEMI 
[3] done ::= CONTEXT SEMI 
[4] done ::= POLICYSTATEMENT SEMI 
[5] done ::= ACTION statement_list 
[6] done ::= CONDITION bexpr SEMI 
[7] done ::= CONDITION debugstatement SEMI bexpr SEMI 
[8] done ::= CONDITION bexpr SEMI debugstatement SEMI 
[9] done ::= CONTEXT context_for_table SEMI 
[10] done ::= CONTEXT debugstatement SEMI context_for_table SEMI 
[11] done ::= POLICYSTATEMENT strexpr SEMI 
[12] done ::= POLICYSTATEMENT nexpr SEMI 
[13] done ::= POLICYSTATEMENT iexpr SEMI 
[14] done ::= POLICYSTATEMENT fexpr SEMI 
[15] done ::= POLICYSTATEMENT bexpr SEMI 
[16] done ::= POLICYSTATEMENT dexpr SEMI 
[17] done ::= IDENT 
[18] statement_list ::= statement_list block 
[19] statement_list ::= block 
[20] separator ::= SEMI 
[21] separator ::= COMMA 
[22] statement ::= setstatement separator 
[23] statement ::= performstatement separator 
[24] statement ::= debugstatement separator 
[25] statement ::= ifstatement separator 
[26] statement ::= addtostatement separator 
[27] statement ::= clearstatement separator 
[28] statement ::= usingstatement separator 
[29] statement ::= randomstatements separator 
[30] statement ::= commonerror separator 
[31] statement ::= operatorstatements separator 
[32] statement ::= contextstatement separator 
[33] statement ::= datestatement separator 
[34] statement ::= xmlvaluestatements separator 
[35] usingblock ::= RENTITY usingblock 
[36] usingblock ::= RENTITY COMMA usingblock 
[37] usingblock ::= block 
[38] possessiveRef ::= POSSESSIVE COMMA possessiveRef 
[39] possessiveRef ::= POSSESSIVE COMMA 
[40] possessiveRef ::= COLON RENTITY COLON possessiveRef 
[41] possessiveRef ::= COLON RENTITY COLON 
[42] colonRef ::= possessiveRef 
[43] gforallblock ::= block forallctl 
[44] context_for_table ::= debugstatement 
[45] context_for_table ::= forctl 
[46] context_for_table ::= forallctl 
[47] context_for_table ::= forfirstctl 
[48] context_for_table ::= contextstatement 
[49] context_for_table ::= localvariables 
[50] localvariables ::= LOCAL ENTITY UNDEFINED 
[51] localvariables ::= LOCAL ENTITY UNDEFINED ASSIGN eexpr 
[52] localvariables ::= LOCAL ENTITY RENTITY 
[53] localvariables ::= LOCAL LONG UNDEFINED 
[54] localvariables ::= LOCAL LONG UNDEFINED ASSIGN number 
[55] localvariables ::= LOCAL LONG RLONG 
[56] localvariables ::= LOCAL DOUBLE UNDEFINED 
[57] localvariables ::= LOCAL DOUBLE UNDEFINED ASSIGN number 
[58] localvariables ::= LOCAL DOUBLE RDOUBLE 
[59] localvariables ::= LOCAL BOOLEAN UNDEFINED 
[60] localvariables ::= LOCAL BOOLEAN UNDEFINED ASSIGN bexpr 
[61] localvariables ::= LOCAL BOOLEAN RBOOLEAN 
[62] localvariables ::= LOCAL DATE UNDEFINED 
[63] localvariables ::= LOCAL DATE UNDEFINED ASSIGN dexpr 
[64] localvariables ::= LOCAL DATE RDATE 
[65] localvariables ::= LOCAL ARRAY UNDEFINED 
[66] localvariables ::= LOCAL ARRAY UNDEFINED ASSIGN array_expr 
[67] localvariables ::= LOCAL ARRAY RARRAY 
[68] localvariables ::= LOCAL STRING UNDEFINED 
[69] localvariables ::= LOCAL STRING UNDEFINED ASSIGN strexpr 
[70] localvariables ::= LOCAL STRING RSTRING 
[71] ifstatement ::= IF bexpr THEN block ENDIF 
[72] ifstatement ::= IF bexpr THEN block ELSE block ENDIF 
[73] forallctl ::= FORALL array_expr 
[74] forallctl ::= FORALL array_expr ALLOWING array_expr TOBEREMOVED 
[75] forallctl ::= FORALL array_expr IN eexpr 
[76] forallctl ::= FORALL array_expr IN eexpr ALLOWING array_expr TOBEREMOVED 
[77] forallctl ::= FORALL array_expr IN eexpr WHERE bexpr 
[78] forallctl ::= FORALL array_expr WHERE bexpr 
[79] forallctl ::= FORALL array_expr WHERE bexpr ALLOWING array_expr TOBEREMOVED 
[80] forallblock ::= array_expr block 
[81] forallblock ::= array_expr WHERE bexpr block 
[82] foreachblock ::= eexpr IN array_expr block 
[83] foreachblock ::= eexpr IN array_expr WHERE bexpr block 
[84] foreachblock ::= eexpr AND ITS eexpr IN array_expr block 
[85] foreachblock ::= eexpr AND ITS eexpr IN array_expr WHERE bexpr block 
[86] forfirstctl ::= FOR FIRST OF array_expr WHERE bexpr 
[87] forfirstctl ::= FOR FIRST OF array_expr AND ITS eexpr WHERE bexpr 
[88] forfirstctl ::= FOR FIRST IN array_expr WHERE bexpr 
[89] firstblock ::= FOR FIRST OF array_expr WHERE bexpr THEN block ELSEIFNONEAREFOUND block ENDFF 
[90] firstblock ::= FOR FIRST OF array_expr WHERE bexpr THEN block ENDFF 
[91] firstblock ::= FOR FIRST OF array_expr AND ITS eexpr WHERE bexpr THEN block ELSEIFNONEAREFOUND block ENDFF 
[92] block ::= LCURLY statement_list RCURLY 
[93] block ::= USING usingblock 
[94] block ::= gforallblock 
[95] block ::= FORALL forallblock 
[96] block ::= FOREACH foreachblock 
[97] block ::= firstblock 
[98] block ::= IF ifblock 
[99] block ::= block separator 
[100] block ::= statement 
[101] usingstatement ::= USING usingblock separator 
[102] left_iexpr ::= RLONG 
[103] left_iexpr ::= colonRef left_iexpr 
[104] left_fexpr ::= RDOUBLE 
[105] left_fexpr ::= colonRef left_fexpr 
[106] left_bexpr ::= RBOOLEAN 
[107] left_bexpr ::= colonRef left_bexpr 
[108] left_eexpr ::= RENTITY 
[109] left_eexpr ::= colonRef left_eexpr 
[110] left_strexpr ::= RSTRING 
[111] left_strexpr ::= colonRef left_strexpr 
[112] left_dexpr ::= RDATE 
[113] left_dexpr ::= colonRef left_dexpr 
[114] left_texpr ::= RTABLE 
[115] left_texpr ::= colonRef left_texpr 
[116] left_ArrayRef ::= RARRAY 
[117] left_ArrayRef ::= colonRef left_ArrayRef 
[118] setstatement ::= SET left_iexpr ASSIGN number 
[119] setstatement ::= SET left_fexpr ASSIGN number 
[120] setstatement ::= SET left_bexpr ASSIGN bexpr 
[121] setstatement ::= SET left_eexpr ASSIGN eexpr 
[122] setstatement ::= SET left_strexpr ASSIGN strexpr 
[123] setstatement ::= SET left_strexpr ASSIGN number 
[124] setstatement ::= SET left_strexpr ASSIGN dexpr 
[125] setstatement ::= SET left_strexpr ASSIGN nexpr 
[126] setstatement ::= SET left_strexpr ASSIGN texpr 
[127] setstatement ::= SET left_bexpr ASSIGN nexpr 
[128] setstatement ::= SET left_dexpr ASSIGN dexpr 
[129] setstatement ::= SET left_texpr ASSIGN texpr 
[130] setstatement ::= SET left_ArrayRef ASSIGN eexpr 
[131] setstatement ::= SET left_ArrayRef ASSIGN strexpr 
[132] setstatement ::= SET left_ArrayRef ASSIGN fexpr 
[133] setstatement ::= SET left_ArrayRef ASSIGN iexpr 
[134] setstatement ::= SET left_ArrayRef ASSIGN dexpr 
[135] setstatement ::= SET left_ArrayRef ASSIGN array_expr 
[136] setstatement ::= INCREMENT RLONG 
[137] setstatement ::= INCREMENT RDOUBLE 
[138] setstatement ::= DECREMENT RLONG 
[139] setstatement ::= DECREMENT RDOUBLE 
[140] forctl ::= FOR left_iexpr ASSIGN number SEMI bexpr SEMI statement 
[141] performstatement ::= PERFORM RDECISIONTABLE AND ONERROR ADD eexpr TO CONTEXT AND PERFORM RDECISIONTABLE 
[142] performstatement ::= RDECISIONTABLE 
[143] performstatement ::= PERFORM RDECISIONTABLE 
[144] performstatement ::= PERFORM NAME 
[145] debugstatement ::= DEBUG strexpr 
[146] debugstatement ::= DEBUG bexpr 
[147] debugstatement ::= DEBUG iexpr 
[148] debugstatement ::= DEBUG fexpr 
[149] debugstatement ::= DEBUG eexpr 
[150] debugstatement ::= DEBUG dexpr 
[151] debugstatement ::= DEBUG array_expr 
[152] debugstatement ::= PRINT strexpr 
[153] debugstatement ::= PRINT bexpr 
[154] debugstatement ::= PRINT iexpr 
[155] debugstatement ::= PRINT fexpr 
[156] debugstatement ::= PRINT eexpr 
[157] debugstatement ::= PRINT dexpr 
[158] debugstatement ::= PRINT array_expr 
[159] ifblock ::= bexpr THEN statement_list ifcontinue 
[160] ifcontinue ::= ENDIF 
[161] ifcontinue ::= ELSE statement_list ENDIF 
[162] ifcontinue ::= ELSEIF ifblock 
[163] number ::= iexpr 
[164] number ::= fexpr 
[165] addtodest2 ::= array_expr2 
[166] addtodest2 ::= RLONG 
[167] addtodest2 ::= RDOUBLE 
[168] addtodest ::= array_expr2 
[169] addtodest ::= RLONG 
[170] addtodest ::= RDOUBLE 
[171] addtodest ::= colonRef addtodest2 
[172] subtodest ::= RLONG 
[173] subtodest ::= RDOUBLE 
[174] subtodest ::= colonRef addtodest2 
[175] addtostatement ::= ADD array_expr TO array_expr IF NOT MEMBER 
[176] addtostatement ::= ADD array_expr TO array_expr 
[177] addtostatement ::= ADD eexpr TO addtodest 
[178] addtostatement ::= ADD eexpr TO addtodest AND TO addtodest 
[179] addtostatement ::= ADD strexpr TO addtodest 
[180] addtostatement ::= ADD strexpr TO addtodest AND TO addtodest 
[181] addtostatement ::= ADD dexpr TO addtodest 
[182] addtostatement ::= ADD dexpr TO addtodest AND TO addtodest 
[183] addtostatement ::= ADD number TO addtodest 
[184] addtostatement ::= ADD number TO addtodest AND TO addtodest 
[185] addtostatement ::= SUBTRACT number FROM subtodest 
[186] addtostatement ::= ADD eexpr IF NOT MEMBER TO array_expr 
[187] addtostatement ::= ADD eexpr IF NOT MEMBER TO array_expr AND TO array_expr 
[188] addtostatement ::= ADD strexpr IF NOT MEMBER TO array_expr 
[189] addtostatement ::= ADD strexpr IF NOT MEMBER TO array_expr AND TO array_expr 
[190] contextstatement ::= ADD eexpr TO CONTEXT OF THIS TABLE 
[191] contextstatement ::= ADD eexpr TO CONTEXT FOR THIS TABLE 
[192] randomstatements ::= REMOVE iexpr ELEMENT FROM array_expr ARRAY 
[193] randomstatements ::= REMOVE EACH eexpr FROM array_expr WHERE bexpr 
[194] randomstatements ::= REMOVE nexpr FROM array_expr ARRAY 
[195] randomstatements ::= REMOVE strexpr FROM array_expr ARRAY 
[196] randomstatements ::= REMOVE eexpr FROM array_expr ARRAY 
[197] randomstatements ::= RANDOMIZE array_expr 
[198] randomstatements ::= CLEAR array_expr 
[199] randomstatements ::= SORT array_expr IN ASCENDINGORDER BY nexpr 
[200] randomstatements ::= SORT array_expr IN DESCENDINGORDER BY nexpr 
[201] operatorlist ::= strexpr COMMA operatorlist 
[202] operatorlist ::= iexpr COMMA operatorlist 
[203] operatorlist ::= fexpr COMMA operatorlist 
[204] operatorlist ::= eexpr COMMA operatorlist 
[205] operatorlist ::= strexpr 
[206] operatorlist ::= iexpr 
[207] operatorlist ::= fexpr 
[208] operatorlist ::= eexpr 
[209] operatorstatements ::= ROPERATOR LPAREN operatorlist RPAREN 
[210] xmlvalues ::= strexpr 
[211] xmlvalues ::= iexpr 
[212] xmlvalues ::= fexpr 
[213] xmlvalues ::= dexpr 
[214] xmlvalues ::= nexpr 
[215] xmlvaluestatements ::= RXMLVALUE COLON SET ATTRIBUTE strexpr ASSIGN xmlvalues 
[216] xmlvaluestatements ::= eexpr COLON SET ATTRIBUTE strexpr ASSIGN xmlvalues 
[217] xmlvaluestatements ::= RXMLVALUE COLON ADD ATTRIBUTE strexpr ASSIGN xmlvalues 
[218] xmlvaluestatements ::= eexpr COLON ADD ATTRIBUTE strexpr ASSIGN xmlvalues 
[219] array_expr ::= POLICYSTATEMENTS 
[220] array_expr ::= colonRef RARRAY 
[221] array_expr ::= array_expr2 
[222] array_expr2 ::= MAP array_expr THROUGH texpr 
[223] array_expr2 ::= LPAREN array_expr RPAREN 
[224] array_expr2 ::= RARRAY 
[225] array_expr2 ::= LPAREN ARRAY RPAREN NAME 
[226] array_expr2 ::= GET COPY OF array_expr 
[227] array_expr2 ::= COPY OF array_expr 
[228] array_expr2 ::= GET DEEPCOPY OF array_expr 
[229] array_expr2 ::= DEEPCOPY OF array_expr 
[230] array_expr2 ::= array_lit 
[231] array_expr2 ::= ARRAY_OF_VALUES LBRACE array_list RBRACE 
[232] array_expr2 ::= TOKENIZE strexpr BY strexpr 
[233] array_lit ::= LBRACE array_list RBRACE 
[234] array_list ::= array_list COMMA strexpr 
[235] array_list ::= array_list COMMA iexpr 
[236] array_list ::= array_list COMMA eexpr 
[237] array_list ::= array_list COMMA fexpr 
[238] array_list ::= array_list COMMA nexpr 
[239] array_list ::= nexpr 
[240] array_list ::= fexpr 
[241] array_list ::= eexpr 
[242] array_list ::= iexpr 
[243] array_list ::= strexpr 
[244] indx_expr ::= array_expr LBRACE iexpr RBRACE 
[245] eexpr ::= RENTITY 
[246] eexpr ::= LPAREN eexpr RPAREN 
[247] eexpr ::= indx_expr 
[248] eexpr ::= NEW nexpr ENTITY 
[249] eexpr ::= NEW RENTITY ENTITY 
[250] eexpr ::= CLONE OF eexpr 
[251] eexpr ::= colonRef RENTITY 
[252] eexpr ::= LPAREN ENTITY RPAREN RTABLE LPAREN tablelist RPAREN 
[253] eexpr ::= FIRST eexpr IN array_expr WHERE bexpr 
[254] eexpr ::= FIRST eexpr WHERE bexpr 
[255] eexpr ::= strexpr OF eexpr 
[256] datestatement ::= SUBTRACT number YEARS FROM RDATE 
[257] datestatement ::= SUBTRACT number MONTHS FROM RDATE 
[258] datestatement ::= SUBTRACT number DAYS FROM RDATE 
[259] datestatement ::= ADD number YEARS TO RDATE 
[260] datestatement ::= ADD number MONTHS TO RDATE 
[261] datestatement ::= ADD number DAYS TO RDATE 
[262] dexpr ::= LPAREN dexpr RPAREN 
[263] dexpr ::= RDATE 
[264] dexpr ::= LPAREN DATE RPAREN strexpr 
[265] dexpr ::= DATE LPAREN strexpr RPAREN 
[266] dexpr ::= LPAREN DATE RPAREN indx_expr 
[267] dexpr ::= LPAREN DATE RPAREN RARRAY LBRACE iexpr RBRACE 
[268] dexpr ::= USING eexpr LPAREN dexpr RPAREN 
[269] dexpr ::= colonRef RDATE 
[270] dexpr ::= LPAREN number DAYS RPAREN 
[271] dexpr ::= dexpr PLUS dexpr 
[272] dexpr ::= dexpr MINUS dexpr 
[273] dexpr ::= LPAREN DATE RPAREN RTABLE LPAREN tablelist RPAREN 
[274] dexpr ::= SUBTRACT number YEARS FROM dexpr 
[275] dexpr ::= SUBTRACT number MONTHS FROM dexpr 
[276] dexpr ::= SUBTRACT number DAYS FROM dexpr 
[277] dexpr ::= ADD number YEARS TO dexpr 
[278] dexpr ::= ADD number MONTHS TO dexpr 
[279] dexpr ::= ADD number DAYS TO dexpr 
[280] dexpr ::= dexpr MINUS number YEARS 
[281] dexpr ::= dexpr MINUS number MONTHS 
[282] dexpr ::= dexpr MINUS number DAYS 
[283] dexpr ::= dexpr PLUS number YEARS 
[284] dexpr ::= dexpr PLUS number MONTHS 
[285] dexpr ::= dexpr PLUS number DAYS 
[286] dexpr ::= FIRST OF YEARS OF dexpr 
[287] dexpr ::= FIRST OF MONTHS OF dexpr 
[288] dexpr ::= END OF MONTHS OF dexpr 
[289] dexpr ::= EARLIEST OF array_expr AFTER dexpr 
[290] nexpr ::= RNAME 
[291] nexpr ::= NAMEOF eexpr 
[292] nexpr ::= THENAME strexpr 
[293] nexpr ::= NAME RARRAY LBRACE iexpr RBRACE 
[294] nexpr ::= NAME 
[295] nexpr ::= USING eexpr LPAREN nexpr RPAREN 
[296] nexpr ::= colonRef RNAME 
[297] nexpr ::= LPAREN NAME RPAREN strexpr 
[298] tablelist ::= strexpr COMMA tablelist 
[299] tablelist ::= strexpr 
[300] texpr ::= RTABLE 
[301] texpr ::= NEW strexpr TABLE OF strexpr 
[302] strexpr ::= ATTRIBUTE strexpr OF eexpr 
[303] strexpr ::= MAPPINGKEY 
[304] strexpr ::= RXMLVALUE 
[305] strexpr ::= RXMLVALUE COLON GET ATTRIBUTE strexpr 
[306] strexpr ::= SUBSTRING OF strexpr FROM iexpr TO iexpr 
[307] strexpr ::= TABLEINFORMATION 
[308] strexpr ::= STRING VALUE OF operatorstatements 
[309] strexpr ::= LPAREN STRING RPAREN texpr LPAREN tablelist RPAREN 
[310] strexpr ::= RSTRING 
[311] strexpr ::= colonRef strexpr 
[312] strexpr ::= STRING 
[313] strexpr ::= strexpr PLUS strexpr 
[314] strexpr ::= LPAREN STRING RPAREN fexpr 
[315] strexpr ::= LPAREN STRING RPAREN iexpr 
[316] strexpr ::= LPAREN STRING RPAREN dexpr 
[317] strexpr ::= CVS LPAREN bexpr RPAREN 
[318] strexpr ::= LPAREN strexpr RPAREN 
[319] strexpr ::= strexpr PLUS iexpr 
[320] strexpr ::= strexpr PLUS fexpr 
[321] strexpr ::= strexpr PLUS nexpr 
[322] strexpr ::= strexpr PLUS eexpr 
[323] strexpr ::= strexpr PLUS dexpr 
[324] strexpr ::= strexpr PLUS array_expr 
[325] strexpr ::= strexpr PLUS RNULL 
[326] strexpr ::= strexpr PLUS RINVALID 
[327] strexpr ::= TRIM LPAREN strexpr RPAREN 
[328] strexpr ::= LPAREN STRING RPAREN indx_expr 
[329] strexpr ::= CHANGE strexpr TO LOWER_CASE 
[330] strexpr ::= CHANGE strexpr TO UPPER_CASE 
[331] strexpr ::= GET CURRENT_DATE 
[332] strexpr ::= GET CURRENT_TIMESTAMP 
[333] strexpr ::= USING eexpr LPAREN strexpr RPAREN 
[334] strexpr ::= RELATIONSHIP_BETWEEN eexpr AND eexpr 
[335] fexpr ::= FLOAT 
[336] fexpr ::= colonRef RDOUBLE 
[337] fexpr ::= RDOUBLE 
[338] fexpr ::= LPAREN DOUBLE RPAREN strexpr 
[339] fexpr ::= LPAREN DOUBLE RPAREN iexpr 
[340] fexpr ::= LPAREN DOUBLE RPAREN RTABLE LPAREN tablelist RPAREN 
[341] fexpr ::= fexpr PLUS iexpr 
[342] fexpr ::= fexpr PLUS fexpr 
[343] fexpr ::= iexpr PLUS fexpr 
[344] fexpr ::= fexpr MINUS iexpr 
[345] fexpr ::= iexpr MINUS fexpr 
[346] fexpr ::= fexpr MINUS fexpr 
[347] fexpr ::= fexpr TIMES iexpr 
[348] fexpr ::= iexpr TIMES fexpr 
[349] fexpr ::= fexpr TIMES fexpr 
[350] fexpr ::= fexpr DIVIDE iexpr 
[351] fexpr ::= iexpr DIVIDE fexpr 
[352] fexpr ::= fexpr DIVIDE fexpr 
[353] fexpr ::= MINUS fexpr 
[354] fexpr ::= LPAREN fexpr RPAREN 
[355] fexpr ::= LPAREN DOUBLE RPAREN indx_expr 
[356] fexpr ::= ADD TO RDOUBLE number 
[357] fexpr ::= SUBTRACT FROM RDOUBLE number 
[358] fexpr ::= MULTIPLY RDOUBLE BY number 
[359] fexpr ::= DIVIDE RDOUBLE BY number 
[360] fexpr ::= ABSOLUTEVALUE OF fexpr 
[361] fexpr ::= USING eexpr LPAREN fexpr RPAREN 
[362] fexpr ::= DOUBLE VALUE OF operatorstatements 
[363] fexpr ::= fexpr ROUNDED 
[364] fexpr ::= fexpr ROUNDED TO iexpr DECIMAL_PLACES 
[365] fexpr ::= fexpr ROUNDED TO iexpr DECIMAL_PLACES WITH_BOUNDRY fexpr 
[366] fexpr ::= SUM_OF fexpr IN array_expr 
[367] iexpr ::= iexpr PLUS iexpr 
[368] iexpr ::= iexpr MINUS iexpr 
[369] iexpr ::= iexpr TIMES iexpr 
[370] iexpr ::= iexpr DIVIDE iexpr 
[371] iexpr ::= INTEGER 
[372] iexpr ::= MINUS iexpr 
[373] iexpr ::= LPAREN iexpr RPAREN 
[374] iexpr ::= RLONG 
[375] iexpr ::= GET DAYS IN YEAROF dexpr 
[376] iexpr ::= GET DAYS IN MONTHS FOR dexpr 
[377] iexpr ::= GET DAYS OF MONTHS FOR dexpr 
[378] iexpr ::= colonRef RLONG 
[379] iexpr ::= LPAREN LONG RPAREN indx_expr 
[380] iexpr ::= LPAREN LONG RPAREN strexpr 
[381] iexpr ::= LPAREN LONG RPAREN number 
[382] iexpr ::= LPAREN LONG RPAREN RTABLE LPAREN tablelist RPAREN 
[383] iexpr ::= NUMBEROF array_expr 
[384] iexpr ::= NUMBEROF array_expr WHERE bexpr 
[385] iexpr ::= LENGTH OF array_expr 
[386] iexpr ::= LENGTH OF strexpr 
[387] iexpr ::= INDEX_OF strexpr IN strexpr 
[388] iexpr ::= USING array_expr number 
[389] iexpr ::= ADD TO RLONG number 
[390] iexpr ::= SUBTRACT FROM RLONG number 
[391] iexpr ::= MULTIPLY RLONG BY number 
[392] iexpr ::= DIVIDE RLONG BY number 
[393] iexpr ::= ABSOLUTEVALUE OF iexpr 
[394] iexpr ::= USING eexpr LPAREN iexpr RPAREN 
[395] iexpr ::= DAYS FROM dexpr TO dexpr 
[396] iexpr ::= MONTHS FROM dexpr TO dexpr 
[397] iexpr ::= YEARS FROM dexpr TO dexpr 
[398] iexpr ::= GET YEAROF dexpr 
[399] iexpr ::= LONG VALUE OF operatorstatements 
[400] iexpr ::= SUM_OF iexpr IN array_expr 
[401] includeSearch ::= VALUE number 
[402] includeSearch ::= DATE dexpr 
[403] includeSearch ::= eexpr 
[404] includeSearch ::= STRING strexpr 
[405] inthe ::= IN 
[406] inthe ::= FOR 
[407] inthe ::= ON 
[408] thereis ::= THERE IS 
[409] thereis ::= IS THERE 
[410] blist ::= strexpr COMMA blist 
[411] blist ::= OR strexpr 
[412] blist_ic ::= strexpr COMMA blist 
[413] blist_ic ::= OR strexpr 
[414] bexpr ::= array_expr DOES NOT INCLUDE includeSearch 
[415] bexpr ::= array_expr DOES INCLUDE includeSearch 
[416] bexpr ::= array_expr INCLUDES includeSearch 
[417] bexpr ::= thereis MATCH FORALL array_expr TO nexpr IN array_expr 
[418] bexpr ::= thereis eexpr WHERE bexpr 
[419] bexpr ::= thereis eexpr inthe eexpr WHERE bexpr 
[420] bexpr ::= thereis eexpr inthe array_expr WHERE bexpr 
[421] bexpr ::= THERE IS NO eexpr WHERE bexpr 
[422] bexpr ::= THERE IS NO eexpr inthe eexpr WHERE bexpr 
[423] bexpr ::= THERE IS NO eexpr inthe array_expr WHERE bexpr 
[424] bexpr ::= ALL array_expr HAVE bexpr 
[425] bexpr ::= ONE OF array_expr HASA bexpr 
[426] bexpr ::= eexpr DOES NOT HAVE strexpr 
[427] bexpr ::= eexpr HASA strexpr 
[428] bexpr ::= eexpr HASA strexpr WHERE bexpr 
[429] bexpr ::= eexpr IS strexpr OF eexpr 
[430] bexpr ::= fexpr IS WITHIN number PERCENTOF fexpr 
[431] bexpr ::= fexpr IS PLUSORMINUS number OF fexpr 
[432] bexpr ::= iexpr EQ iexpr 
[433] bexpr ::= fexpr EQ iexpr 
[434] bexpr ::= iexpr EQ fexpr 
[435] bexpr ::= fexpr EQ fexpr 
[436] bexpr ::= iexpr NEQ iexpr 
[437] bexpr ::= fexpr NEQ iexpr 
[438] bexpr ::= iexpr NEQ fexpr 
[439] bexpr ::= fexpr NEQ fexpr 
[440] bexpr ::= iexpr GT iexpr 
[441] bexpr ::= fexpr GT iexpr 
[442] bexpr ::= iexpr GT fexpr 
[443] bexpr ::= fexpr GT fexpr 
[444] bexpr ::= iexpr GTE iexpr 
[445] bexpr ::= fexpr GTE iexpr 
[446] bexpr ::= iexpr GTE fexpr 
[447] bexpr ::= fexpr GTE fexpr 
[448] bexpr ::= iexpr LT iexpr 
[449] bexpr ::= fexpr LT iexpr 
[450] bexpr ::= iexpr LT fexpr 
[451] bexpr ::= fexpr LT fexpr 
[452] bexpr ::= iexpr LTE iexpr 
[453] bexpr ::= fexpr LTE iexpr 
[454] bexpr ::= iexpr LTE fexpr 
[455] bexpr ::= fexpr LTE fexpr 
[456] bexpr ::= RBOOLEAN 
[457] bexpr ::= colonRef RBOOLEAN 
[458] bexpr ::= nexpr EQ nexpr 
[459] bexpr ::= nexpr EQ strexpr 
[460] bexpr ::= nexpr NEQ nexpr 
[461] bexpr ::= nexpr NEQ strexpr 
[462] bexpr ::= strexpr EQ_IGNORE_CASE blist_ic 
[463] bexpr ::= strexpr EQ blist 
[464] bexpr ::= strexpr EQ strexpr 
[465] bexpr ::= strexpr NEQ strexpr 
[466] bexpr ::= strexpr EQ_IGNORE_CASE strexpr 
[467] bexpr ::= strexpr NEQ_IGNORE_CASE strexpr 
[468] bexpr ::= strexpr AT iexpr STARTS_WITH strexpr 
[469] bexpr ::= strexpr STARTS_WITH strexpr 
[470] bexpr ::= strexpr IS ONE OF array_expr 
[471] bexpr ::= strexpr IS NOT ONE OF array_expr 
[472] bexpr ::= DOES bexpr QUESTIONMARK 
[473] bexpr ::= IS bexpr QUESTIONMARK 
[474] bexpr ::= WAS bexpr QUESTIONMARK 
[475] bexpr ::= strexpr GT strexpr 
[476] bexpr ::= strexpr LT strexpr 
[477] bexpr ::= strexpr GTE strexpr 
[478] bexpr ::= strexpr LTE strexpr 
[479] bexpr ::= strexpr MATCHES strexpr 
[480] bexpr ::= bexpr EQ bexpr 
[481] bexpr ::= bexpr NEQ bexpr 
[482] bexpr ::= bexpr AND bexpr 
[483] bexpr ::= bexpr OR bexpr 
[484] bexpr ::= NOT bexpr 
[485] bexpr ::= bexpr ISNULL 
[486] bexpr ::= bexpr ISNOTNULL 
[487] bexpr ::= number ISNULL 
[488] bexpr ::= number ISNOTNULL 
[489] bexpr ::= dexpr ISNULL 
[490] bexpr ::= array_expr ISNULL 
[491] bexpr ::= strexpr ISNULL 
[492] bexpr ::= eexpr ISNULL 
[493] bexpr ::= dexpr ISNOTNULL 
[494] bexpr ::= array_expr ISNOTNULL 
[495] bexpr ::= strexpr ISNOTNULL 
[496] bexpr ::= eexpr ISNOTNULL 
[497] bexpr ::= USING eexpr LPAREN bexpr RPAREN 
[498] bexpr ::= LPAREN bexpr RPAREN 
[499] bexpr ::= LPAREN BOOLEAN RPAREN indx_expr 
[500] bexpr ::= LPAREN BOOLEAN RPAREN strexpr 
[501] bexpr ::= BOOLEAN RARRAY LBRACE iexpr RBRACE 
[502] bexpr ::= dexpr EQ dexpr 
[503] bexpr ::= dexpr LT dexpr 
[504] bexpr ::= dexpr IS BEFORE dexpr 
[505] bexpr ::= dexpr GT dexpr 
[506] bexpr ::= dexpr IS AFTER dexpr 
[507] bexpr ::= dexpr GTE dexpr 
[508] bexpr ::= dexpr LTE dexpr 
[509] bexpr ::= dexpr IS BETWEEN dexpr AND dexpr 
[510] bexpr ::= eexpr EQ eexpr 
[511] bexpr ::= eexpr NEQ eexpr 
[512] bexpr ::= RENTITY ENTITY IS NOT IN CONTEXT 
[513] bexpr ::= RENTITY ENTITY IS IN CONTEXT 
[514] bexpr ::= strexpr ENTITY IS IN CONTEXT 
[515] bexpr ::= strexpr ENTITY IS NOT IN CONTEXT 
[516] bexpr ::= BOOLEAN VALUE OF operatorstatements 
[517] bexpr ::= BOOL_FUNCTION 

Closing files...
------- CUP v0.10k Parser Generation Summary -------
  0 errors and 0 warnings
  167 terminals, 66 non-terminals, and 518 productions declared, 
  producing 1319 unique parse states.
  0 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  0 conflicts detected (0 expected).
  Code written to "DTRulesParser.java", and "sym.java".
---------------------------------------------------- (v0.10k)
