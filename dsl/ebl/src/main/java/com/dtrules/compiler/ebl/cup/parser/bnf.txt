/** 
 * Copyright 2004-2009 DTRules.com, Inc.
 *   
 * Licensed under the Apache License, Version 2.0 (the "License");  
 * you may not use this file except in compliance with the License.  
 * You may obtain a copy of the License at  
 *   
 *      http://www.apache.org/licenses/LICENSE-2.0  
 *   
 * Unless required by applicable law or agreed to in writing, software  
 * distributed under the License is distributed on an "AS IS" BASIS,  
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
 * See the License for the specific language governing permissions and  
 * limitations under the License.  
 **/
 Opening files...
Parsing specification from standard input...
Checking specification...
Building parse tables...
  Computing non-terminal nullability...
  Computing first sets...
  Building state machine...
  Filling in tables...
  Checking for non-reduced productions...
Writing parser...
===== Terminals =====
[0]EOF [1]error [2]ABSOLUTEVALUE [3]ACTION [4]ADD 
[5]AFTER [6]ALL [7]ALLOWING [8]AND [9]ARRAY 
[10]ARRAY_OF_VALUES [11]ASCENDINGORDER [12]ASSIGN [13]ATTRIBUTE [14]AT 
[15]BEFORE [16]BETWEEN [17]BOOL_FUNCTION [18]BOOLEAN [19]BY 
[20]CHANGE [21]CLEAR [22]CLONE [23]COLON [24]CONTEXT 
[25]COMMA [26]CONDITION [27]COPY [28]CURRENT_DATE [29]CURRENT_TIMESTAMP 
[30]DATE [31]DAYS [32]DEBUG [33]DECIMAL_PLACES [34]DECREMENT 
[35]DEEPCOPY [36]DESCENDINGORDER [37]DIVIDE [38]DOES [39]DOUBLE 
[40]EACH [41]EARLIEST [42]ELEMENT [43]ELSE [44]ELSEIF 
[45]ELSEIFNONEAREFOUND [46]END [47]ENDFF [48]ENDIF [49]ENTITY 
[50]EQ [51]EQ_IGNORE_CASE [52]FIND [53]FIRST [54]FLOAT 
[55]FOR [56]FORALL [57]FOREACH [58]FROM [59]GET 
[60]GT [61]GTE [62]HASA [63]HAVE [64]IF 
[65]IN [66]INCLUDE [67]INCLUDES [68]INCREMENT [69]INDEX_OF 
[70]INTEGER [71]IS [72]ISNOTNULL [73]ISNULL [74]ISWITHIN 
[75]ITS [76]LBRACE [77]LCURLY [78]LENGTH [79]LOCAL 
[80]LONG [81]LOWER_CASE [82]LPAREN [83]LT [84]LTE 
[85]MAP [86]MAPPINGKEY [87]MATCH [88]MATCHES [89]MEMBER 
[90]MINUS [91]MONTHS [92]MULTIPLY [93]NAME [94]NAMEOF 
[95]NEQ [96]NEQ_IGNORE_CASE [97]NEW [98]NO [99]NOT 
[100]NUMBEROF [101]OF [102]ON [103]ONE [104]ONERROR 
[105]OR [106]PERCENTOF [107]PERFORM [108]PLUS [109]PLUSORMINUS 
[110]POLICYSTATEMENT [111]POLICYSTATEMENTS [112]POSSESSIVE [113]PRINT [114]QUESTIONMARK 
[115]RANDOMIZE [116]RARRAY [117]RBOOLEAN [118]RBRACE [119]RCURLY 
[120]RDATE [121]RDECISIONTABLE [122]RDOUBLE [123]RELATIONSHIP_BETWEEN [124]REMOVE 
[125]RENTITY [126]RINVALID [127]RLONG [128]RNAME [129]RNULL 
[130]ROPERATOR [131]ROUNDED [132]RPAREN [133]RSTRING [134]RTABLE 
[135]RXMLVALUE [136]SEMI [137]SET [138]SORT [139]STARTS_WITH 
[140]STRING [141]SUBSTRING [142]SUBTRACT [143]SUM_OF [144]TABLE 
[145]TABLEINFORMATION [146]THEN [147]THENAME [148]THERE [149]THIS 
[150]TIMES [151]THROUGH [152]TO [153]TOBEREMOVED [154]TOKENIZE 
[155]TRIM [156]UMINUS [157]UNDEFINED [158]UPPER_CASE [159]USING 
[160]VALUE [161]WAS [162]WHERE [163]WITHIN [164]WITH_BOUNDRY 
[165]YEARS [166]YEAROF [167]IDENT 

===== Non terminals =====
[0]$START [1]done [2]statement_list [3]statement [4]number 
[5]inthe [6]iexpr [7]fexpr [8]bexpr [9]eexpr 
[10]nexpr [11]texpr [12]strexpr [13]indx_expr [14]dexpr 
[15]array_expr [16]array_expr2 [17]includeSearch [18]gforallblock [19]foreachblock 
[20]forallblock [21]forctl [22]findclause [23]forallctl [24]forfirstctl 
[25]ifblock [26]usingblock [27]firstblock [28]block [29]thereis 
[30]setstatement [31]usingstatement [32]performstatement [33]debugstatement [34]ifstatement 
[35]addtostatement [36]addtodest [37]addtodest2 [38]subtodest [39]clearstatement 
[40]randomstatements [41]commonerror [42]tablelist [43]operatorlist [44]operatorstatements 
[45]contextstatement [46]localvariables [47]context_for_table [48]datestatement [49]xmlvalues 
[50]xmlvaluestatements [51]separator [52]blist [53]blist_ic [54]ifcontinue 
[55]left_iexpr [56]left_fexpr [57]left_bexpr [58]left_eexpr [59]left_strexpr 
[60]left_dexpr [61]left_ArrayRef [62]left_texpr [63]colonRef [64]possessiveRef 
[65]array_lit [66]array_list 

===== Productions =====
[0] done ::= ACTION SEMI 
[1] $START ::= done EOF 
[2] done ::= CONDITION SEMI 
[3] done ::= CONTEXT SEMI 
[4] done ::= POLICYSTATEMENT SEMI 
[5] done ::= ACTION statement_list 
[6] done ::= CONDITION bexpr SEMI 
[7] done ::= CONDITION debugstatement SEMI bexpr SEMI 
[8] done ::= CONDITION bexpr SEMI debugstatement SEMI 
[9] done ::= CONTEXT context_for_table SEMI 
[10] done ::= CONTEXT findclause SEMI 
[11] done ::= CONTEXT debugstatement SEMI context_for_table SEMI 
[12] done ::= POLICYSTATEMENT strexpr SEMI 
[13] done ::= POLICYSTATEMENT nexpr SEMI 
[14] done ::= POLICYSTATEMENT iexpr SEMI 
[15] done ::= POLICYSTATEMENT fexpr SEMI 
[16] done ::= POLICYSTATEMENT bexpr SEMI 
[17] done ::= POLICYSTATEMENT dexpr SEMI 
[18] done ::= IDENT 
[19] statement_list ::= statement_list block 
[20] statement_list ::= block 
[21] separator ::= SEMI 
[22] separator ::= COMMA 
[23] statement ::= setstatement separator 
[24] statement ::= performstatement separator 
[25] statement ::= debugstatement separator 
[26] statement ::= ifstatement separator 
[27] statement ::= addtostatement separator 
[28] statement ::= clearstatement separator 
[29] statement ::= usingstatement separator 
[30] statement ::= randomstatements separator 
[31] statement ::= commonerror separator 
[32] statement ::= operatorstatements separator 
[33] statement ::= contextstatement separator 
[34] statement ::= datestatement separator 
[35] statement ::= xmlvaluestatements separator 
[36] usingblock ::= RENTITY usingblock 
[37] usingblock ::= RENTITY COMMA usingblock 
[38] usingblock ::= block 
[39] possessiveRef ::= POSSESSIVE COMMA possessiveRef 
[40] possessiveRef ::= POSSESSIVE COMMA 
[41] possessiveRef ::= COLON RENTITY COLON possessiveRef 
[42] possessiveRef ::= COLON RENTITY COLON 
[43] colonRef ::= possessiveRef 
[44] gforallblock ::= block forallctl 
[45] context_for_table ::= forctl 
[46] context_for_table ::= forallctl 
[47] context_for_table ::= forfirstctl 
[48] context_for_table ::= contextstatement 
[49] context_for_table ::= localvariables 
[50] findclause ::= FIND RENTITY IN array_expr THEN context_for_table THEN 
[51] localvariables ::= LOCAL ENTITY UNDEFINED 
[52] localvariables ::= LOCAL ENTITY UNDEFINED ASSIGN eexpr 
[53] localvariables ::= LOCAL ENTITY RENTITY 
[54] localvariables ::= LOCAL LONG UNDEFINED 
[55] localvariables ::= LOCAL LONG UNDEFINED ASSIGN number 
[56] localvariables ::= LOCAL LONG RLONG 
[57] localvariables ::= LOCAL DOUBLE UNDEFINED 
[58] localvariables ::= LOCAL DOUBLE UNDEFINED ASSIGN number 
[59] localvariables ::= LOCAL DOUBLE RDOUBLE 
[60] localvariables ::= LOCAL BOOLEAN UNDEFINED 
[61] localvariables ::= LOCAL BOOLEAN UNDEFINED ASSIGN bexpr 
[62] localvariables ::= LOCAL BOOLEAN RBOOLEAN 
[63] localvariables ::= LOCAL DATE UNDEFINED 
[64] localvariables ::= LOCAL DATE UNDEFINED ASSIGN dexpr 
[65] localvariables ::= LOCAL DATE RDATE 
[66] localvariables ::= LOCAL ARRAY UNDEFINED 
[67] localvariables ::= LOCAL ARRAY UNDEFINED ASSIGN array_expr 
[68] localvariables ::= LOCAL ARRAY RARRAY 
[69] localvariables ::= LOCAL STRING UNDEFINED 
[70] localvariables ::= LOCAL STRING UNDEFINED ASSIGN strexpr 
[71] localvariables ::= LOCAL STRING RSTRING 
[72] ifstatement ::= IF bexpr THEN block ENDIF 
[73] ifstatement ::= IF bexpr THEN block ELSE block ENDIF 
[74] forallctl ::= FORALL array_expr 
[75] forallctl ::= FORALL array_expr ALLOWING array_expr TOBEREMOVED 
[76] forallctl ::= FORALL array_expr IN eexpr 
[77] forallctl ::= FORALL array_expr IN eexpr ALLOWING array_expr TOBEREMOVED 
[78] forallctl ::= FORALL array_expr IN eexpr WHERE bexpr 
[79] forallctl ::= FORALL array_expr WHERE bexpr 
[80] forallctl ::= FORALL array_expr WHERE bexpr ALLOWING array_expr TOBEREMOVED 
[81] forallblock ::= array_expr block 
[82] forallblock ::= array_expr WHERE bexpr block 
[83] foreachblock ::= eexpr IN array_expr block 
[84] foreachblock ::= eexpr IN array_expr WHERE bexpr block 
[85] foreachblock ::= eexpr AND ITS eexpr IN array_expr block 
[86] foreachblock ::= eexpr AND ITS eexpr IN array_expr WHERE bexpr block 
[87] forfirstctl ::= FOR FIRST OF array_expr WHERE bexpr 
[88] forfirstctl ::= FOR FIRST OF array_expr AND ITS eexpr WHERE bexpr 
[89] forfirstctl ::= FOR FIRST IN array_expr WHERE bexpr 
[90] firstblock ::= FOR FIRST OF array_expr WHERE bexpr THEN block ELSEIFNONEAREFOUND block ENDFF 
[91] firstblock ::= FOR FIRST OF array_expr WHERE bexpr THEN block ENDFF 
[92] firstblock ::= FOR FIRST OF array_expr AND ITS eexpr WHERE bexpr THEN block ELSEIFNONEAREFOUND block ENDFF 
[93] block ::= LCURLY statement_list RCURLY 
[94] block ::= USING usingblock 
[95] block ::= gforallblock 
[96] block ::= FORALL forallblock 
[97] block ::= FOREACH foreachblock 
[98] block ::= firstblock 
[99] block ::= IF ifblock 
[100] block ::= block separator 
[101] block ::= statement 
[102] usingstatement ::= USING usingblock separator 
[103] left_iexpr ::= RLONG 
[104] left_iexpr ::= colonRef left_iexpr 
[105] left_fexpr ::= RDOUBLE 
[106] left_fexpr ::= colonRef left_fexpr 
[107] left_bexpr ::= RBOOLEAN 
[108] left_bexpr ::= colonRef left_bexpr 
[109] left_eexpr ::= RENTITY 
[110] left_eexpr ::= colonRef left_eexpr 
[111] left_strexpr ::= RSTRING 
[112] left_strexpr ::= colonRef left_strexpr 
[113] left_dexpr ::= RDATE 
[114] left_dexpr ::= colonRef left_dexpr 
[115] left_texpr ::= RTABLE 
[116] left_texpr ::= colonRef left_texpr 
[117] left_ArrayRef ::= RARRAY 
[118] left_ArrayRef ::= colonRef left_ArrayRef 
[119] setstatement ::= SET left_iexpr ASSIGN number 
[120] setstatement ::= SET left_fexpr ASSIGN number 
[121] setstatement ::= SET left_bexpr ASSIGN bexpr 
[122] setstatement ::= SET left_eexpr ASSIGN eexpr 
[123] setstatement ::= SET left_strexpr ASSIGN strexpr 
[124] setstatement ::= SET left_strexpr ASSIGN number 
[125] setstatement ::= SET left_strexpr ASSIGN dexpr 
[126] setstatement ::= SET left_strexpr ASSIGN nexpr 
[127] setstatement ::= SET left_strexpr ASSIGN texpr 
[128] setstatement ::= SET left_bexpr ASSIGN nexpr 
[129] setstatement ::= SET left_dexpr ASSIGN dexpr 
[130] setstatement ::= SET left_texpr ASSIGN texpr 
[131] setstatement ::= SET left_ArrayRef ASSIGN eexpr 
[132] setstatement ::= SET left_ArrayRef ASSIGN strexpr 
[133] setstatement ::= SET left_ArrayRef ASSIGN fexpr 
[134] setstatement ::= SET left_ArrayRef ASSIGN iexpr 
[135] setstatement ::= SET left_ArrayRef ASSIGN dexpr 
[136] setstatement ::= SET left_ArrayRef ASSIGN array_expr 
[137] setstatement ::= INCREMENT RLONG 
[138] setstatement ::= INCREMENT RDOUBLE 
[139] setstatement ::= DECREMENT RLONG 
[140] setstatement ::= DECREMENT RDOUBLE 
[141] forctl ::= FOR left_iexpr ASSIGN number SEMI bexpr SEMI statement 
[142] performstatement ::= PERFORM RDECISIONTABLE AND ONERROR ADD eexpr TO CONTEXT AND PERFORM RDECISIONTABLE 
[143] performstatement ::= RDECISIONTABLE 
[144] performstatement ::= PERFORM RDECISIONTABLE 
[145] performstatement ::= PERFORM NAME 
[146] debugstatement ::= DEBUG strexpr 
[147] debugstatement ::= DEBUG bexpr 
[148] debugstatement ::= DEBUG iexpr 
[149] debugstatement ::= DEBUG fexpr 
[150] debugstatement ::= DEBUG eexpr 
[151] debugstatement ::= DEBUG dexpr 
[152] debugstatement ::= DEBUG array_expr 
[153] debugstatement ::= PRINT strexpr 
[154] debugstatement ::= PRINT bexpr 
[155] debugstatement ::= PRINT iexpr 
[156] debugstatement ::= PRINT fexpr 
[157] debugstatement ::= PRINT eexpr 
[158] debugstatement ::= PRINT dexpr 
[159] debugstatement ::= PRINT array_expr 
[160] ifblock ::= bexpr THEN statement_list ifcontinue 
[161] ifcontinue ::= ENDIF 
[162] ifcontinue ::= ELSE statement_list ENDIF 
[163] ifcontinue ::= ELSEIF ifblock 
[164] number ::= iexpr 
[165] number ::= fexpr 
[166] addtodest2 ::= array_expr2 
[167] addtodest2 ::= RLONG 
[168] addtodest2 ::= RDOUBLE 
[169] addtodest ::= array_expr2 
[170] addtodest ::= RLONG 
[171] addtodest ::= RDOUBLE 
[172] addtodest ::= colonRef addtodest2 
[173] subtodest ::= RLONG 
[174] subtodest ::= RDOUBLE 
[175] subtodest ::= colonRef addtodest2 
[176] addtostatement ::= ADD array_expr TO array_expr IF NOT MEMBER 
[177] addtostatement ::= ADD array_expr TO array_expr 
[178] addtostatement ::= ADD eexpr TO addtodest 
[179] addtostatement ::= ADD eexpr TO addtodest AND TO addtodest 
[180] addtostatement ::= ADD strexpr TO addtodest 
[181] addtostatement ::= ADD strexpr TO addtodest AND TO addtodest 
[182] addtostatement ::= ADD dexpr TO addtodest 
[183] addtostatement ::= ADD dexpr TO addtodest AND TO addtodest 
[184] addtostatement ::= ADD number TO addtodest 
[185] addtostatement ::= ADD number TO addtodest AND TO addtodest 
[186] addtostatement ::= SUBTRACT number FROM subtodest 
[187] addtostatement ::= ADD eexpr IF NOT MEMBER TO array_expr 
[188] addtostatement ::= ADD eexpr IF NOT MEMBER TO array_expr AND TO array_expr 
[189] addtostatement ::= ADD strexpr IF NOT MEMBER TO array_expr 
[190] addtostatement ::= ADD strexpr IF NOT MEMBER TO array_expr AND TO array_expr 
[191] contextstatement ::= ADD eexpr TO CONTEXT OF THIS TABLE 
[192] contextstatement ::= ADD eexpr TO CONTEXT FOR THIS TABLE 
[193] randomstatements ::= REMOVE iexpr ELEMENT FROM array_expr ARRAY 
[194] randomstatements ::= REMOVE EACH eexpr FROM array_expr WHERE bexpr 
[195] randomstatements ::= REMOVE nexpr FROM array_expr ARRAY 
[196] randomstatements ::= REMOVE strexpr FROM array_expr ARRAY 
[197] randomstatements ::= REMOVE eexpr FROM array_expr ARRAY 
[198] randomstatements ::= RANDOMIZE array_expr 
[199] randomstatements ::= CLEAR array_expr 
[200] randomstatements ::= SORT array_expr IN ASCENDINGORDER BY nexpr 
[201] randomstatements ::= SORT array_expr IN DESCENDINGORDER BY nexpr 
[202] operatorlist ::= strexpr COMMA operatorlist 
[203] operatorlist ::= iexpr COMMA operatorlist 
[204] operatorlist ::= fexpr COMMA operatorlist 
[205] operatorlist ::= eexpr COMMA operatorlist 
[206] operatorlist ::= strexpr 
[207] operatorlist ::= iexpr 
[208] operatorlist ::= fexpr 
[209] operatorlist ::= eexpr 
[210] operatorstatements ::= ROPERATOR LPAREN operatorlist RPAREN 
[211] xmlvalues ::= strexpr 
[212] xmlvalues ::= iexpr 
[213] xmlvalues ::= fexpr 
[214] xmlvalues ::= dexpr 
[215] xmlvalues ::= nexpr 
[216] xmlvaluestatements ::= RXMLVALUE COLON SET ATTRIBUTE strexpr ASSIGN xmlvalues 
[217] xmlvaluestatements ::= eexpr COLON SET ATTRIBUTE strexpr ASSIGN xmlvalues 
[218] xmlvaluestatements ::= RXMLVALUE COLON ADD ATTRIBUTE strexpr ASSIGN xmlvalues 
[219] xmlvaluestatements ::= eexpr COLON ADD ATTRIBUTE strexpr ASSIGN xmlvalues 
[220] array_expr ::= POLICYSTATEMENTS 
[221] array_expr ::= colonRef RARRAY 
[222] array_expr ::= array_expr2 
[223] array_expr2 ::= MAP array_expr THROUGH texpr 
[224] array_expr2 ::= LPAREN array_expr RPAREN 
[225] array_expr2 ::= RARRAY 
[226] array_expr2 ::= LPAREN ARRAY RPAREN NAME 
[227] array_expr2 ::= GET COPY OF array_expr 
[228] array_expr2 ::= COPY OF array_expr 
[229] array_expr2 ::= GET DEEPCOPY OF array_expr 
[230] array_expr2 ::= DEEPCOPY OF array_expr 
[231] array_expr2 ::= array_lit 
[232] array_expr2 ::= ARRAY_OF_VALUES LBRACE array_list RBRACE 
[233] array_expr2 ::= TOKENIZE strexpr BY strexpr 
[234] array_lit ::= LBRACE array_list RBRACE 
[235] array_list ::= array_list COMMA strexpr 
[236] array_list ::= array_list COMMA iexpr 
[237] array_list ::= array_list COMMA eexpr 
[238] array_list ::= array_list COMMA fexpr 
[239] array_list ::= array_list COMMA nexpr 
[240] array_list ::= array_list COMMA array_expr 
[241] array_list ::= array_list COMMA bexpr 
[242] array_list ::= bexpr 
[243] array_list ::= array_expr 
[244] array_list ::= nexpr 
[245] array_list ::= fexpr 
[246] array_list ::= eexpr 
[247] array_list ::= iexpr 
[248] array_list ::= strexpr 
[249] indx_expr ::= array_expr LBRACE iexpr RBRACE 
[250] eexpr ::= RENTITY 
[251] eexpr ::= LPAREN eexpr RPAREN 
[252] eexpr ::= indx_expr 
[253] eexpr ::= NEW nexpr ENTITY 
[254] eexpr ::= NEW RENTITY ENTITY 
[255] eexpr ::= CLONE OF eexpr 
[256] eexpr ::= colonRef RENTITY 
[257] eexpr ::= LPAREN ENTITY RPAREN RTABLE LPAREN tablelist RPAREN 
[258] eexpr ::= FIRST eexpr IN array_expr WHERE bexpr 
[259] eexpr ::= FIRST eexpr WHERE bexpr 
[260] eexpr ::= strexpr OF eexpr 
[261] datestatement ::= SUBTRACT number YEARS FROM RDATE 
[262] datestatement ::= SUBTRACT number MONTHS FROM RDATE 
[263] datestatement ::= SUBTRACT number DAYS FROM RDATE 
[264] datestatement ::= ADD number YEARS TO RDATE 
[265] datestatement ::= ADD number MONTHS TO RDATE 
[266] datestatement ::= ADD number DAYS TO RDATE 
[267] dexpr ::= LPAREN dexpr RPAREN 
[268] dexpr ::= RDATE 
[269] dexpr ::= LPAREN DATE RPAREN strexpr 
[270] dexpr ::= DATE LPAREN strexpr RPAREN 
[271] dexpr ::= LPAREN DATE RPAREN indx_expr 
[272] dexpr ::= LPAREN DATE RPAREN RARRAY LBRACE iexpr RBRACE 
[273] dexpr ::= USING eexpr LPAREN dexpr RPAREN 
[274] dexpr ::= colonRef RDATE 
[275] dexpr ::= LPAREN number DAYS RPAREN 
[276] dexpr ::= dexpr PLUS dexpr 
[277] dexpr ::= dexpr MINUS dexpr 
[278] dexpr ::= LPAREN DATE RPAREN RTABLE LPAREN tablelist RPAREN 
[279] dexpr ::= CURRENT_DATE 
[280] dexpr ::= SUBTRACT number YEARS FROM dexpr 
[281] dexpr ::= SUBTRACT number MONTHS FROM dexpr 
[282] dexpr ::= SUBTRACT number DAYS FROM dexpr 
[283] dexpr ::= ADD number YEARS TO dexpr 
[284] dexpr ::= ADD number MONTHS TO dexpr 
[285] dexpr ::= ADD number DAYS TO dexpr 
[286] dexpr ::= dexpr MINUS number YEARS 
[287] dexpr ::= dexpr MINUS number MONTHS 
[288] dexpr ::= dexpr MINUS number DAYS 
[289] dexpr ::= dexpr PLUS number YEARS 
[290] dexpr ::= dexpr PLUS number MONTHS 
[291] dexpr ::= dexpr PLUS number DAYS 
[292] dexpr ::= FIRST OF YEARS OF dexpr 
[293] dexpr ::= FIRST OF MONTHS OF dexpr 
[294] dexpr ::= END OF MONTHS OF dexpr 
[295] dexpr ::= EARLIEST OF array_expr AFTER dexpr 
[296] nexpr ::= RNAME 
[297] nexpr ::= NAMEOF eexpr 
[298] nexpr ::= THENAME strexpr 
[299] nexpr ::= NAME RARRAY LBRACE iexpr RBRACE 
[300] nexpr ::= NAME 
[301] nexpr ::= USING eexpr LPAREN nexpr RPAREN 
[302] nexpr ::= colonRef RNAME 
[303] nexpr ::= LPAREN NAME RPAREN strexpr 
[304] tablelist ::= strexpr COMMA tablelist 
[305] tablelist ::= strexpr 
[306] texpr ::= RTABLE 
[307] texpr ::= NEW strexpr TABLE OF strexpr 
[308] strexpr ::= ATTRIBUTE strexpr OF eexpr 
[309] strexpr ::= MAPPINGKEY 
[310] strexpr ::= RXMLVALUE 
[311] strexpr ::= RXMLVALUE COLON GET ATTRIBUTE strexpr 
[312] strexpr ::= SUBSTRING OF strexpr FROM iexpr TO iexpr 
[313] strexpr ::= TABLEINFORMATION 
[314] strexpr ::= STRING VALUE OF operatorstatements 
[315] strexpr ::= LPAREN STRING RPAREN texpr LPAREN tablelist RPAREN 
[316] strexpr ::= RSTRING 
[317] strexpr ::= colonRef strexpr 
[318] strexpr ::= STRING 
[319] strexpr ::= strexpr PLUS strexpr 
[320] strexpr ::= STRING VALUE OF fexpr 
[321] strexpr ::= STRING VALUE OF iexpr 
[322] strexpr ::= STRING VALUE OF dexpr 
[323] strexpr ::= STRING VALUE OF BOOLEAN bexpr 
[324] strexpr ::= LPAREN strexpr RPAREN 
[325] strexpr ::= strexpr PLUS iexpr 
[326] strexpr ::= strexpr PLUS fexpr 
[327] strexpr ::= strexpr PLUS nexpr 
[328] strexpr ::= strexpr PLUS eexpr 
[329] strexpr ::= strexpr PLUS dexpr 
[330] strexpr ::= strexpr PLUS array_expr 
[331] strexpr ::= strexpr PLUS RNULL 
[332] strexpr ::= strexpr PLUS RINVALID 
[333] strexpr ::= TRIM LPAREN strexpr RPAREN 
[334] strexpr ::= LPAREN STRING RPAREN indx_expr 
[335] strexpr ::= CHANGE strexpr TO LOWER_CASE 
[336] strexpr ::= CHANGE strexpr TO UPPER_CASE 
[337] strexpr ::= GET CURRENT_TIMESTAMP 
[338] strexpr ::= USING eexpr LPAREN strexpr RPAREN 
[339] strexpr ::= RELATIONSHIP_BETWEEN eexpr AND eexpr 
[340] fexpr ::= FLOAT 
[341] fexpr ::= colonRef RDOUBLE 
[342] fexpr ::= RDOUBLE 
[343] fexpr ::= LPAREN DOUBLE RPAREN strexpr 
[344] fexpr ::= LPAREN DOUBLE RPAREN iexpr 
[345] fexpr ::= LPAREN DOUBLE RPAREN RTABLE LPAREN tablelist RPAREN 
[346] fexpr ::= fexpr PLUS iexpr 
[347] fexpr ::= fexpr PLUS fexpr 
[348] fexpr ::= iexpr PLUS fexpr 
[349] fexpr ::= fexpr MINUS iexpr 
[350] fexpr ::= iexpr MINUS fexpr 
[351] fexpr ::= fexpr MINUS fexpr 
[352] fexpr ::= fexpr TIMES iexpr 
[353] fexpr ::= iexpr TIMES fexpr 
[354] fexpr ::= fexpr TIMES fexpr 
[355] fexpr ::= fexpr DIVIDE iexpr 
[356] fexpr ::= iexpr DIVIDE fexpr 
[357] fexpr ::= fexpr DIVIDE fexpr 
[358] fexpr ::= MINUS fexpr 
[359] fexpr ::= LPAREN fexpr RPAREN 
[360] fexpr ::= LPAREN DOUBLE RPAREN indx_expr 
[361] fexpr ::= ADD TO RDOUBLE number 
[362] fexpr ::= SUBTRACT FROM RDOUBLE number 
[363] fexpr ::= MULTIPLY RDOUBLE BY number 
[364] fexpr ::= DIVIDE RDOUBLE BY number 
[365] fexpr ::= ABSOLUTEVALUE OF fexpr 
[366] fexpr ::= USING eexpr LPAREN fexpr RPAREN 
[367] fexpr ::= DOUBLE VALUE OF operatorstatements 
[368] fexpr ::= fexpr ROUNDED 
[369] fexpr ::= fexpr ROUNDED TO iexpr DECIMAL_PLACES 
[370] fexpr ::= fexpr ROUNDED TO iexpr DECIMAL_PLACES WITH_BOUNDRY fexpr 
[371] fexpr ::= SUM_OF RDOUBLE IN array_expr 
[372] iexpr ::= iexpr PLUS iexpr 
[373] iexpr ::= iexpr MINUS iexpr 
[374] iexpr ::= iexpr TIMES iexpr 
[375] iexpr ::= iexpr DIVIDE iexpr 
[376] iexpr ::= INTEGER 
[377] iexpr ::= MINUS iexpr 
[378] iexpr ::= LPAREN iexpr RPAREN 
[379] iexpr ::= RLONG 
[380] iexpr ::= GET DAYS IN YEAROF dexpr 
[381] iexpr ::= GET DAYS IN MONTHS FOR dexpr 
[382] iexpr ::= GET DAYS OF MONTHS FOR dexpr 
[383] iexpr ::= colonRef RLONG 
[384] iexpr ::= LPAREN LONG RPAREN indx_expr 
[385] iexpr ::= LPAREN LONG RPAREN strexpr 
[386] iexpr ::= LPAREN LONG RPAREN number 
[387] iexpr ::= LPAREN LONG RPAREN RTABLE LPAREN tablelist RPAREN 
[388] iexpr ::= NUMBEROF array_expr 
[389] iexpr ::= NUMBEROF array_expr WHERE bexpr 
[390] iexpr ::= LENGTH OF array_expr 
[391] iexpr ::= LENGTH OF strexpr 
[392] iexpr ::= INDEX_OF strexpr IN strexpr 
[393] iexpr ::= USING array_expr number 
[394] iexpr ::= ADD TO RLONG number 
[395] iexpr ::= SUBTRACT FROM RLONG number 
[396] iexpr ::= MULTIPLY RLONG BY number 
[397] iexpr ::= DIVIDE RLONG BY number 
[398] iexpr ::= ABSOLUTEVALUE OF iexpr 
[399] iexpr ::= USING eexpr LPAREN iexpr RPAREN 
[400] iexpr ::= DAYS FROM dexpr TO dexpr 
[401] iexpr ::= MONTHS FROM dexpr TO dexpr 
[402] iexpr ::= YEARS FROM dexpr TO dexpr 
[403] iexpr ::= GET YEAROF dexpr 
[404] iexpr ::= LONG VALUE OF operatorstatements 
[405] iexpr ::= SUM_OF iexpr IN array_expr 
[406] includeSearch ::= VALUE number 
[407] includeSearch ::= DATE dexpr 
[408] includeSearch ::= eexpr 
[409] includeSearch ::= STRING strexpr 
[410] inthe ::= IN 
[411] inthe ::= FOR 
[412] inthe ::= ON 
[413] thereis ::= THERE IS 
[414] thereis ::= IS THERE 
[415] blist ::= strexpr COMMA blist 
[416] blist ::= OR strexpr 
[417] blist_ic ::= strexpr COMMA blist 
[418] blist_ic ::= OR strexpr 
[419] bexpr ::= array_expr DOES NOT INCLUDE includeSearch 
[420] bexpr ::= array_expr DOES INCLUDE includeSearch 
[421] bexpr ::= array_expr INCLUDES includeSearch 
[422] bexpr ::= iexpr ISWITHIN array_expr 
[423] bexpr ::= thereis MATCH FORALL array_expr TO nexpr IN array_expr 
[424] bexpr ::= thereis eexpr WHERE bexpr 
[425] bexpr ::= thereis eexpr inthe eexpr WHERE bexpr 
[426] bexpr ::= thereis eexpr inthe array_expr WHERE bexpr 
[427] bexpr ::= THERE IS NO eexpr WHERE bexpr 
[428] bexpr ::= THERE IS NO eexpr inthe eexpr WHERE bexpr 
[429] bexpr ::= THERE IS NO eexpr inthe array_expr WHERE bexpr 
[430] bexpr ::= ALL array_expr HAVE bexpr 
[431] bexpr ::= ONE OF array_expr HASA bexpr 
[432] bexpr ::= eexpr DOES NOT HAVE strexpr 
[433] bexpr ::= eexpr HASA strexpr 
[434] bexpr ::= eexpr HASA strexpr WHERE bexpr 
[435] bexpr ::= eexpr IS strexpr OF eexpr 
[436] bexpr ::= fexpr IS WITHIN number PERCENTOF fexpr 
[437] bexpr ::= fexpr IS PLUSORMINUS number OF fexpr 
[438] bexpr ::= iexpr EQ iexpr 
[439] bexpr ::= fexpr EQ iexpr 
[440] bexpr ::= iexpr EQ fexpr 
[441] bexpr ::= fexpr EQ fexpr 
[442] bexpr ::= iexpr NEQ iexpr 
[443] bexpr ::= fexpr NEQ iexpr 
[444] bexpr ::= iexpr NEQ fexpr 
[445] bexpr ::= fexpr NEQ fexpr 
[446] bexpr ::= iexpr GT iexpr 
[447] bexpr ::= fexpr GT iexpr 
[448] bexpr ::= iexpr GT fexpr 
[449] bexpr ::= fexpr GT fexpr 
[450] bexpr ::= iexpr GTE iexpr 
[451] bexpr ::= fexpr GTE iexpr 
[452] bexpr ::= iexpr GTE fexpr 
[453] bexpr ::= fexpr GTE fexpr 
[454] bexpr ::= iexpr LT iexpr 
[455] bexpr ::= fexpr LT iexpr 
[456] bexpr ::= iexpr LT fexpr 
[457] bexpr ::= fexpr LT fexpr 
[458] bexpr ::= iexpr LTE iexpr 
[459] bexpr ::= fexpr LTE iexpr 
[460] bexpr ::= iexpr LTE fexpr 
[461] bexpr ::= fexpr LTE fexpr 
[462] bexpr ::= RBOOLEAN 
[463] bexpr ::= colonRef RBOOLEAN 
[464] bexpr ::= nexpr EQ nexpr 
[465] bexpr ::= nexpr EQ strexpr 
[466] bexpr ::= nexpr NEQ nexpr 
[467] bexpr ::= nexpr NEQ strexpr 
[468] bexpr ::= strexpr EQ_IGNORE_CASE blist_ic 
[469] bexpr ::= strexpr EQ blist 
[470] bexpr ::= strexpr EQ strexpr 
[471] bexpr ::= strexpr NEQ strexpr 
[472] bexpr ::= strexpr EQ_IGNORE_CASE strexpr 
[473] bexpr ::= strexpr NEQ_IGNORE_CASE strexpr 
[474] bexpr ::= strexpr AT iexpr STARTS_WITH strexpr 
[475] bexpr ::= strexpr STARTS_WITH strexpr 
[476] bexpr ::= strexpr IS ONE OF array_expr 
[477] bexpr ::= strexpr IS NOT ONE OF array_expr 
[478] bexpr ::= DOES bexpr QUESTIONMARK 
[479] bexpr ::= IS bexpr QUESTIONMARK 
[480] bexpr ::= WAS bexpr QUESTIONMARK 
[481] bexpr ::= strexpr GT strexpr 
[482] bexpr ::= strexpr LT strexpr 
[483] bexpr ::= strexpr GTE strexpr 
[484] bexpr ::= strexpr LTE strexpr 
[485] bexpr ::= strexpr MATCHES strexpr 
[486] bexpr ::= bexpr EQ bexpr 
[487] bexpr ::= bexpr NEQ bexpr 
[488] bexpr ::= bexpr AND bexpr 
[489] bexpr ::= bexpr OR bexpr 
[490] bexpr ::= NOT bexpr 
[491] bexpr ::= bexpr ISNULL 
[492] bexpr ::= bexpr ISNOTNULL 
[493] bexpr ::= number ISNULL 
[494] bexpr ::= number ISNOTNULL 
[495] bexpr ::= dexpr ISNULL 
[496] bexpr ::= array_expr ISNULL 
[497] bexpr ::= strexpr ISNULL 
[498] bexpr ::= eexpr ISNULL 
[499] bexpr ::= dexpr ISNOTNULL 
[500] bexpr ::= array_expr ISNOTNULL 
[501] bexpr ::= strexpr ISNOTNULL 
[502] bexpr ::= eexpr ISNOTNULL 
[503] bexpr ::= USING eexpr LPAREN bexpr RPAREN 
[504] bexpr ::= LPAREN bexpr RPAREN 
[505] bexpr ::= LPAREN BOOLEAN RPAREN indx_expr 
[506] bexpr ::= LPAREN BOOLEAN RPAREN strexpr 
[507] bexpr ::= BOOLEAN RARRAY LBRACE iexpr RBRACE 
[508] bexpr ::= dexpr EQ dexpr 
[509] bexpr ::= dexpr LT dexpr 
[510] bexpr ::= dexpr IS BEFORE dexpr 
[511] bexpr ::= dexpr GT dexpr 
[512] bexpr ::= dexpr IS AFTER dexpr 
[513] bexpr ::= dexpr GTE dexpr 
[514] bexpr ::= dexpr LTE dexpr 
[515] bexpr ::= dexpr IS BETWEEN dexpr AND dexpr 
[516] bexpr ::= eexpr EQ eexpr 
[517] bexpr ::= eexpr NEQ eexpr 
[518] bexpr ::= RENTITY ENTITY IS NOT IN CONTEXT 
[519] bexpr ::= RENTITY ENTITY IS IN CONTEXT 
[520] bexpr ::= strexpr ENTITY IS IN CONTEXT 
[521] bexpr ::= strexpr ENTITY IS NOT IN CONTEXT 
[522] bexpr ::= BOOLEAN VALUE OF operatorstatements 
[523] bexpr ::= BOOL_FUNCTION 

Closing files...
------- CUP v0.10k Parser Generation Summary -------
  0 errors and 0 warnings
  168 terminals, 67 non-terminals, and 524 productions declared, 
  producing 1320 unique parse states.
  0 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  0 conflicts detected (0 expected).
  Code written to "DTRulesParser.java", and "sym.java".
---------------------------------------------------- (v0.10k)
